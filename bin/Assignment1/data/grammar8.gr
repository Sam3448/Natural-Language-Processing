# Symbols in the grammar are case-sensitive.
# 
# This grammar uses a convention that
#    - terminals are lowercase          (president)
#    - preterminals are capitalized     (Noun)
#    - other nonterminals are all-caps  (NP)
# 
# This convention just makes grammars more readable to humans.  Thus:
#
#    - When *you* are writing grammars in questions 3 and 6, you should 
#      follow this convention unless you have a good reason not to.  
#
#    - But your *program* should still work with grammars that don't
#      follow this convention.  So how can your program reliably tell
#      the difference between terminal and nonterminal symbols?  If
#      there is at least one rule for rewriting a symbol, then that
#      symbol is a nonterminal and should be rewritten.
#######################

# Rules for creating full sentences.

1	ROOT	S .
1	ROOT	S !
1	ROOT	is it true that S ?

# The basic grammar rules.  Here's what the abbreviations stand for:
#    S  = sentence
#    NP = noun phrase
#    VP = verb phrase
#    PP = prepositional phrase
#    Det = determiner (sometimes called "article")
#    Prep = preposition
#    Adj = adjective

10	S	NP VP
1	S	S C_Conj S
1	S	Clause VP

1	VP	Verb_t NP
1	VP	Verb_int
1	VP	VP PP

3	NP	P_Noun
1	NP	NP PP
1	NP	NP C_Conj NP
3	NP	Det_V C_Noun_V
3	NP	Det_C C_Noun_C
1	NP	Det C_Noun_C
1	NP	Det C_Noun_V
1	NP	NP R_Clause

1	PP	Prep NP

1	P_Noun	Adj_V P_Noun
1	P_Noun	Adj_C P_Noun

1	Clause	S_Conj S 

1	Verb_t	Verb_t C_Conj Verb_t
1	verb_int	Verb_int C_Conj Verb_int

2	NP	Pronoun

1	C_Noun_V	Adj_V C_Noun_V
1	C_Noun_V	Adj_V C_Noun_C
1	C_Noun_C	Adj_C C_Noun_V
1	C_Noun_C	Adj_C C_Noun_C

1	Adj_V	Adj_V Adj_V
1	Adj_V	Adj_V Adj_C
1	Adj_C	Adj_C Adj_V
1	Adj_C	Adj_C Adj_C

1	R_Clause	S_Conj NP Verb_int R_Clause
1	R_Clause	S_Conj NP Verb_t
1	R_Clause	S_Conj Verb_t NP

# Vocabulary.  Your program can see that "ate" is a terminal
# symbol because there exists no rule for rewriting it.
# Any symbol that can rewrite as a terminal (or a string of 
# terminals, like "chief of staff") is called a "preterminal."  Notice 
# that a preterminal is a special kind of nonterminal.

1	Verb_t	ate
1	Verb_t	wanted
1	Verb_t	kissed
1	Verb_t	want
1	Verb_t	understood
1	Verb_t	pickled
1	Verb_t	perplexed
5	Verb_t	Verb_t_n
1	Verb_t_n	didn't eat
1	Verb_t_n	didn't want
1	Verb_t_n	didn't kiss
1	Verb_t_n	don't want
1	Verb_t_n	didn't understand
1	Verb_t_n	didn't pickle
1	Verb_t_n	didn't perplex

1	Verb_int	sighed
1	Verb_int	thought
1	Verb_int	worked

1	Pronoun	it

1	Det_V	an
1	Det_C	a
1	Det	the
1	Det	every

1	C_Noun_C	president
1	C_Noun_C	sandwich
1	C_Noun_C	pickle
1	C_Noun_C	chief of staff
1	C_Noun_C	floor
1	C_Noun_C	desk
1	C_Noun_C	proposal
1	C_Noun_V	apple
1	P_Noun	Sally

3	Adj_C	fine
3	Adj_C	delicious
3	Adj_C	perplexed
3	Adj_C	pickled
6	Adj_V	ambivalent

1	Adv_C	very
1	Adv_V	often

1	Prep	with
1	Prep	on
1	Prep	under
1	Prep	in

1	C_Conj	and
1	S_Conj	that
